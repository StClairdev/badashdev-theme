!function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="./js/footer-main.js")}({"./js/footer-main.js":
/*!***************************!*\
  !*** ./js/footer-main.js ***!
  \***************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _navigation = __webpack_require__(/*! ./navigation */ "./js/navigation.js");\n\nvar _skipLinkFocusFix = __webpack_require__(/*! ./skip-link-focus-fix */ "./js/skip-link-focus-fix.js");\n\n(0, _navigation.Navigation)();\n(0, _skipLinkFocusFix.SkipLinkFocus)();\n\n//# sourceURL=webpack:///./js/footer-main.js?')},"./js/navigation.js":
/*!**************************!*\
  !*** ./js/navigation.js ***!
  \**************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * File navigation.js.\n *\n * Handles toggling the navigation menu for small screens and enables TAB key\n * navigation support for dropdown menus.\n */\nvar Navigation = exports.Navigation = function Navigation() {\n  var container = void 0;\n  var button = void 0;\n  var menu = void 0;\n  var links = void 0;\n  var i = void 0;\n  var len = void 0;\n\n  container = document.getElementById('site-navigation');\n  if (!container) {\n    return;\n  }\n\n  button = container.getElementsByTagName('button')[0];\n  if ('undefined' === typeof button) {\n    return;\n  }\n\n  menu = container.getElementsByTagName('ul')[0];\n\n  // Hide menu toggle button if menu is empty and return early.\n  if ('undefined' === typeof menu) {\n    button.style.display = 'none';\n    return;\n  }\n\n  menu.setAttribute('aria-expanded', 'false');\n  if (!menu.className.includes('nav-menu')) {\n    menu.className += ' nav-menu';\n  }\n\n  button.onclick = function () {\n    if (container.className.includes('toggled')) {\n      container.className = container.className.replace(' toggled', '');\n      button.setAttribute('aria-expanded', 'false');\n      menu.setAttribute('aria-expanded', 'false');\n    } else {\n      container.className += ' toggled';\n      button.setAttribute('aria-expanded', 'true');\n      menu.setAttribute('aria-expanded', 'true');\n    }\n  };\n\n  // Get all the link elements within the menu.\n  links = menu.getElementsByTagName('a');\n\n  // Each time a menu link is focused or blurred, toggle focus.\n  for (i = 0, len = links.length; i < len; i++) {\n    links[i].addEventListener('focus', toggleFocus, true);\n    links[i].addEventListener('blur', toggleFocus, true);\n  }\n\n  /**\n   * Sets or removes .focus class on an element.\n   */\n  function toggleFocus() {\n    var self = this;\n\n    // Move up through the ancestors of the current link until we hit .nav-menu.\n    while (!self.className.includes('nav-menu')) {\n\n      // On li elements toggle the class .focus.\n      if ('li' === self.tagName.toLowerCase()) {\n        if (self.className.includes('focus')) {\n          self.className = self.className.replace(' focus', '');\n        } else {\n          self.className += ' focus';\n        }\n      }\n\n      self = self.parentElement;\n    }\n  }\n\n  /**\n   * Toggles `focus` class to allow submenu access on tablets.\n   */\n  (function (container) {\n    var touchStartFn = void 0;\n    var i = void 0;\n    var parentLink = container.querySelectorAll('.menu-item-has-children > a, .page_item_has_children > a');\n\n    if ('ontouchstart' in window) {\n      touchStartFn = function touchStartFn(e) {\n        var menuItem = this.parentNode;\n        var i = void 0;\n\n        if (!menuItem.classList.contains('focus')) {\n          e.preventDefault();\n          for (i = 0; i < menuItem.parentNode.children.length; ++i) {\n            if (menuItem === menuItem.parentNode.children[i]) {\n              continue;\n            }\n            menuItem.parentNode.children[i].classList.remove('focus');\n          }\n          menuItem.classList.add('focus');\n        } else {\n          menuItem.classList.remove('focus');\n        }\n      };\n\n      for (i = 0; i < parentLink.length; ++i) {\n        parentLink[i].addEventListener('touchstart', touchStartFn, false);\n      }\n    }\n  })(container);\n};\n\n//# sourceURL=webpack:///./js/navigation.js?")},"./js/skip-link-focus-fix.js":
/*!***********************************!*\
  !*** ./js/skip-link-focus-fix.js ***!
  \***********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * File skip-link-focus-fix.js.\n *\n * Helps with accessibility for keyboard only users.\n *\n * Learn more: https://git.io/vWdr2\n */\nvar SkipLinkFocus = exports.SkipLinkFocus = function SkipLinkFocus() {\n  var isIe = /(trident|msie)/i.test(navigator.userAgent);\n\n  if (isIe && document.getElementById && window.addEventListener) {\n    window.addEventListener('hashchange', function () {\n      var id = location.hash.substring(1);\n      var element = void 0;\n\n      if (!/^[A-z0-9_-]+$/.test(id)) {\n        return;\n      }\n\n      element = document.getElementById(id);\n\n      if (element) {\n        if (!/^(?:a|select|input|button|textarea)$/i.test(element.tagName)) {\n          element.tabIndex = -1;\n        }\n\n        element.focus();\n      }\n    }, false);\n  }\n};\n\n//# sourceURL=webpack:///./js/skip-link-focus-fix.js?")}});